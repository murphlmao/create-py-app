name: Windows Release Workflow

on:
  push:
    branches:
      - release_24b1.0.0  # Trigger only on your test branch

jobs:
  build:
    name: Build and release (Windows)
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Rust for Windows (GNU toolchain)
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true

      # Step 3: Build the project (Windows target)
      - name: Build the project
        run: cargo build --release --target=x86_64-pc-windows-gnu

      # Step 4: Archive the built binary for release
      - name: Create release artifact
        run: |
          mkdir -p release
          cp target/x86_64-pc-windows-gnu/release/<your-app-name>.exe release/
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: <your-app-name>-windows
          path: release/

  create_release:
    needs: build
    name: Create GitHub Release
    runs-on: windows-latest
    steps:
      # Step 5: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 6: Create GitHub Release
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: true
          prerelease: true
          body: "Windows release generated by GitHub Actions"
          token: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Upload the compiled binary to the release
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/<your-app-name>.exe
          asset_name: <your-app-name>-windows.exe
          asset_content_type: application/octet-stream
